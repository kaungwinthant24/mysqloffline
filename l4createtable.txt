=>Choose Database
	USE wdf6683;

=>Show Tables
	SHOW TABLES;
	SHOW FULL TABLES;  (table type pr ml);
	SHOW TABLES FROM databasenames;
	SHOW TABLES IN databasenames;
	SHOW FULL TABLES FROM databasename;
	SHOW FULL TABLES IN databasename;

=>Show Table (one table)
--method(1)
	DESCRIBE tablename; (or)  DESC tablename;
--method(2)
	SHOW COLUMNS FROM tablename;  (from current database)
	SHOW COLUMNS FROM databasename.tablename; (or) SHOW COLUMNS FROM tablename IN databasename; (from another database) 

=>Creat Table
=> Syntax
	CREATE TABLE tablenames(
		column1 datatype,
		column2 datatype,
		column3 datatype
		........
	);

	CREATE TABLE persons(
		personid INT,
		firstname VARCHAR(255),
		lastname VARCHAR(255),
		city VARCHAR(255),
		address VARCHAR(255)
	);

	USE wdf6683;

=> Drop Table (sigle)
	DROP TABLE tablename;
	DROP TABLE IF EXISTS tablename;
	DROP TABLE databasename.tablename; (another database)
	DROP TABLE IF EXISTS databasename.tablename;

=> Drop Table (multi)
	DROP TABLE tablename,tablename,....; 
	DROP TABLE IF EXISTS tablename,tablename,....;
	DROP TABLE databasename.tablename,tablename,....; (another database)
	DROP TABLE IF EXISTS databasename.tablename,tablename,....;

	CREATE TABLE peoples(
		personid INT,
		firstname VARCHAR(255),
		lastname VARCHAR(255),
		city VARCHAR(255),
		address VARCHAR(255)
	);

----------------------------------------------------------------------

*Exercise

	CREATE TABLE abc(
		name VARCHAR(10)
	);	

	(again error)
	CREATE TABLE abc(
		name VARCHAR(10)
	);

	CREATE TABLE IF NOT EXISTS abc(
		name VARCHAR(10)
	);


=> TURNCATE 
	CREATE TABLE IF NOT EXISTS monitors(
		brand VARCHAR(100),
		price INT
	);

	DESC monitors; or DESCRIBE monitors;
	 
	SELECT * FROM tablename; => swel htoke
	SELECT * FROM monitors;

	TRUNCATE TABLE tablename; => empty lod tr
	TRUNCATE TABLE databasename.tablename; => empty lod tr (external)
	TRUNCATE TABLE monitors;

	DELETE FROM tablename; => empty tr pl
	DELETE FROM databasename.tablename; => empty
	DELETE FROM monitors;

----------------------------------------------------------------------

=> Rename Table

= Syntax

		ALTER TABLE table           // table ko pyin ml
		RENAME TO newtablename;		// rename ml

		CREATE TABLE stocks(
			item VARCHAR(100),
			stock INT
		);

		SHOW TABLES;

		DESC stocks;

		INSERT INTO stocks(item,stock)
		VALUE ('desktop',20),
			  ('laptop',10),
			  ('projector',5);

		SELECT * FROM stocks;

		ALTER TABLE stocks 
		RENAME TO itaccessories;

		SHOW TABLES;

		SELECT * FROM itaccessories;

----------------------------------------------------------------------

=> Add New Columns To Table

 => Syntax Single
Method 1
--------
	ALTER TABLE tablename
	ADD COLUMN columnname datatype;

Method 2 
--------
	ALTER TABLE tablename
	ADD COLUMN columnname datatype FIRST/AFTER existingcolumnname;

=> Syntax Multi
	ALTER TABLE tablename
	ADD COLUMN columnname1 datatype FIRST/AFTER existingcolumnname;
	ADD COLUMN columnname2 datatype FIRST/AFTER existingcolumnname;

	SELECT * FROM itaccessories;

	ALTER TABLE itaccessories
	ADD COLUMN brand VARCHAR(50);

	DESC itaccessories;

	SELECT * FROM itaccessories;

	*NOTE : FIRST = as the first filed COLUMN name
	ALTER TABLE itaccessories
	ADD COLUMN unitprice DECIMAL(10,2) NOT NULL FIRST;	

	DESC itaccessories;

	ALTER TABLE itaccessories
	ADD COLUMN madeby VARCHAR(50) NOT NULL AFTER item;

	DESC itaccessories;

	SELECT * FROM itaccessories;


=Exercise (Multi)

	ALTER TABLE itaccessories
	ADD COLUMN status INT AFTER brand,
	ADD COLUMN createdby INT NOT NULL AFTER status;    (NOT NULL ll pay htr tl INT moh 0 pl pya)

	INSERT INTO itaccessories (unitprice,item,madeby,stock,brand,status,createdby)
	VALUES (10,'keyboard','china',30,'a4tech',1,1001),
		   (5,'mouse','taiwan',50,'logitech',1,1008);

	----------------------------------------------------------------------

	=>RENAME COLUMN in table name

	=Syntax

	ALTER TABLE tablename
	CHANGE COLUMN oldcolumnname newcolumnname datatype;

	ALTER TABLE itaccessories
	CHANGE COLUMN stock totalqty INT;


	ALTER TABLE itaccessories
	CHANGE COLUMN madeby manufactureby VARCHAR(30);

	ALTER TABLE itaccessories
	CHANGE COLUMN manufactureby manufactureby VARCHAR(50);
		
	SELECT * FROM itaccessories;

----------------------------------------------------------------------

=>MODIFY COLUMN in table (Use for Change column data type)

=Syntax (Single)

	ALTER TABLE tablename
	MODIFY columnname newdatatype;

=Syntax (Multi)

	ALTER TABLE tablename
	MODIFY columnname newdatatype,
	MODIFY columnname newdatatype,
	MODIFY columnname newdatatype;

=Exercise (Single)

	DESC itaccessoreis;

	ALTER TABLE itaccessories
	MODIFY manufactureby VARCHAR(30);

	DESC itaccessories;
	SELECT * FROM itaccessories;

	ALTER TABLE itaccessories
	MODIFY manufactureby VARCHAR(50) NOT NULL;

	ALTER TABLE itaccessories
	MODIFY item VARCHAR(100) NOT NULL;

= Exercise (Multi)

	DESC itaccessories;

	ALTER TABLE itaccessories
	MODIFY item VARCHAR(50) NULL,
	MODIFY brand VARCHAR(30) NOT NULL;
-------
=> Move Column

	ALTER TABLE itaccessories
	MODIFY unitprice DECIMAL(12,2) NOT NULL
	AFTER BRAND;

----------------------------------------------------------------------

=>Drop Columns in table

=Syntax (Single)
	ALTER TABLE tablename
	DROP COLUMN columnname;

=Syntax (Multi)
	ALTER TABLE tablename
	DROP COLUMN columnname,
	DROP COLUMN columnname,
	DROP COLUMN columnname;

=Exercise
	DESC itaccessories;
	SELECT * FROM itaccessories;

	ALTER TABLE itaccessories
	DROP COLUMN status;

	ALTER TABLE itaccessories
	DROP COLUMN manufactureby,
	DROP COLUMN createdby;

	SELECT * FROM itaccessories;

----------------------------------------------------------------------

=>Add PRIMARY key (table 2 khu chate sat tr nae Unique phit ag lod tr)

=Method 1
	ALTER TABLE itaccessories
	ADD COLUMN id INT NOT NULL AUTO_INCREMENT PRIMARY KEY FIRST;

	=> SHOW INDEX FROM itaccessories; (bl column mhr br key pay htr ll kyi tr)

=Method 2
	ALTER TABLE itaccessories
	ADD COLUMN id INT NOT NULL AUTO_INCREMENT FIRST,
	ADD PRIMARY KEY(id);

	DESC itaccessories;
	SELECT * FROM itaccessories;
	SHOW INDEX FROM itaccessories;

----------------------------------------------------------------------

=> DROP PRIMARY KEY 
	
	DESC itaccessories;
	SELECT * FROM itaccessories;
	SHOW INDEX FROM itaccessories;

	*error => We need to remove auto_increment (by modify)
	ALTER TABLE itaccessories
	DROP PRIMARY KEY;

	ALTER TABLE itaccessories MODIFY id INT NOT NULL;
	ALTER TABLE itaccessories DROP PRIMARY KEY;

	DESC itaccessories;
	SELECT * FROM itaccessories;
	SHOW INDEX FROM itaccessories;

----------------------------------------------------------------------






